import{P as r,j as s,r as h,S as W}from"./index-cXx1SNfi.js";import{P as A}from"./PageHeader-CUyudchU.js";import{p as H,c as G,d as J,e as K,g as P}from"./sleeperApi-ZrK9evFK.js";import{u as Q}from"./useFetchPlayers-DG78ZSEJ.js";const T=({league:i,index:n,toggleBoxscore:c,activeBoxScores:p})=>s.jsx(s.Fragment,{children:s.jsxs("div",{className:"matchup-summary",children:[s.jsxs("h2",{children:[i.year,": ",i.champion.username]}),s.jsxs("p",{children:["defeats ",i.runnerUp.username]}),s.jsxs("p",{children:[i.champion.points," - ",i.runnerUp.points]}),s.jsx("button",{className:"boxscore-btn",onClick:()=>c(n),children:p[n]?"Hide":"Box Score"})]})});T.propTypes={league:r.shape({year:r.string.isRequired,champion:r.shape({username:r.string.isRequired,points:r.number.isRequired}).isRequired,runnerUp:r.shape({username:r.string.isRequired,points:r.number.isRequired}).isRequired}).isRequired,index:r.number.isRequired,toggleBoxscore:r.func.isRequired,activeBoxScores:r.objectOf(r.bool).isRequired};const C=({league:i})=>s.jsx(s.Fragment,{children:s.jsxs("div",{className:"matchup-box-score",children:[s.jsxs("ul",{className:"team-stats-winner",children:[s.jsx("h4",{className:"boxscore-team-name",children:i.champion.username}),i.champion.stats.map((n,c)=>s.jsxs("div",{className:"starter",children:[s.jsx("img",{src:`https://sleepercdn.com/content/nfl/players/${n.playerId}.jpg`,alt:`image of ${n.name}`,className:"starter-img"}),s.jsx("div",{className:"starter-info starter-position",children:n.position}),s.jsx("div",{className:"starter-info starter-name",children:n.name}),s.jsx("div",{className:"starter-info starter-points",children:n.points})]},c)),s.jsx("h4",{className:"boxscore-total-points-winner",children:i.champion.points})]}),s.jsxs("ul",{className:"team-stats",children:[s.jsx("h4",{className:"boxscore-team-name",children:i.runnerUp.username}),i.runnerUp.stats.map((n,c)=>s.jsxs("div",{className:"starter",children:[s.jsx("img",{src:`https://sleepercdn.com/content/nfl/players/${n.playerId}.jpg`,alt:`image of ${n.name}`,className:"starter-img"}),s.jsx("div",{className:"starter-info starter-position",children:n.position}),s.jsx("div",{className:"starter-info starter-name",children:n.name}),s.jsx("div",{className:"starter-info starter-points",children:n.points})]},c)),s.jsx("h4",{className:"boxscore-total-points",children:i.runnerUp.points})]})]})});C.propTypes={league:r.shape({champion:r.shape({username:r.string.isRequired,points:r.number.isRequired,stats:r.arrayOf(r.shape({playerId:r.string.isRequired,name:r.string.isRequired,position:r.string.isRequired,points:r.number.isRequired})).isRequired}).isRequired,runnerUp:r.shape({username:r.string.isRequired,points:r.number.isRequired,stats:r.arrayOf(r.shape({playerId:r.string.isRequired,name:r.string.isRequired,position:r.string.isRequired,points:r.number.isRequired})).isRequired}).isRequired}).isRequired};const V=i=>{const[n,c]=h.useState([]),[p,N]=h.useState(!0),[U,b]=h.useState(null);return h.useEffect(()=>{const S=async o=>{try{const t=await G(o),m=await J(o),a=await K(o),u=await P(o,16),F=await P(o,17),O=new Set(u.map(e=>e.matchup_id)),z=new Set(F.map(e=>e.matchup_id));let L=null;if(O.size<=3?L=16:z.size<=3&&(L=17),!L)return console.error(`No championship week found in the ${t.season} league year.`),N(!1),{previousLeagueId:t.previous_league_id};const M=await P(o,L);console.log(M);const l=M.filter(e=>e.matchup_id===1);if(l.length!==2)return console.error("No championship matchup found",`(${t.season})`),null;const f=l[0],g=l[1];let x,d,k,_,j,y;f.points>g.points?(x=m.find(e=>e.roster_id===f.roster_id),d=a.find(e=>e.roster_id===x.owner_id),k=f.points,_=m.find(e=>e.roster_id===g.roster_id),j=a.find(e=>e.user_id===_.owner_id),y=g.points):(x=m.find(e=>e.roster_id===g.roster_id),d=a.find(e=>e.user_id===x.owner_id),k=g.points,_=m.find(e=>e.roster_id===f.roster_id),j=a.find(e=>e.user_id===_.owner_id),y=f.points),d||console.error(`Champion user not found for the ${t.season} league year, proceeding with available data`),j||console.error(`Runner-Up user not found for the ${t.season} league year, proceeding with available data`);const B=l.find(e=>e.roster_id===x.roster_id),E=l.find(e=>e.roster_id===_.roster_id);return{year:t.season,champion:{username:d?d.display_name||d.username:"miahpersson",points:k,stats:B.starters.map((e,D)=>{var R,q,v,w;return{position:(R=i[e])==null?void 0:R.position,team:(q=i[e])==null?void 0:q.team,name:(v=i[e])!=null&&v.first_name&&((w=i[e])!=null&&w.last_name)?`${i[e].first_name} ${i[e].last_name}`:"unknown player",points:B.starters_points[D],playerId:e}})},runnerUp:{username:j.display_name||j.username,points:y,stats:E.starters.map((e,D)=>{var R,q,v,w;return{position:(R=i[e])==null?void 0:R.position,team:(q=i[e])==null?void 0:q.team,name:(v=i[e])!=null&&v.first_name&&((w=i[e])!=null&&w.last_name)?`${i[e].first_name} ${i[e].last_name}`:"unknown player",points:E.starters_points[D],playerId:e}})},previousLeagueId:t.previous_league_id}}catch(t){throw console.error("error fetching league data",t),t}},$=async o=>{try{let t=o;const m=[];for(;t;){const a=await S(t);if(!a)break;a.year&&m.push(a),t=a.previousLeagueId}c(m)}catch(t){b(t)}finally{N(!1)}};Object.keys(i).length>0&&$(H)},[i]),{leaguesData:n,loading:p,error:U}},ee=()=>{const{players:i,loading:n,error:c}=Q(),{leaguesData:p,loading:N,error:U}=V(i),[b,S]=h.useState({}),$=n||N,o=c||U,t=h.useMemo(()=>p,[p]);if($)return s.jsx(W,{});if(o)return s.jsxs("div",{children:["Error: ",o.message]});const m=a=>{S(u=>({...u,[a]:!u[a]}))};return s.jsxs("div",{className:"previous-champions-container",children:[s.jsx(A,{pageTitle:"League Champions"}),s.jsx("div",{className:"champion-div",children:t.map((a,u)=>s.jsxs("div",{className:"champion-item",children:[s.jsx(T,{league:a,index:u,toggleBoxscore:m,activeBoxScores:b}),b[u]&&s.jsx(C,{league:a})]},u))})]})};export{ee as default};
